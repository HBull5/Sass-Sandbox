// varriables in sass much like PHP vars
$primary-color: #444;
$secondary-color: dodgerblue;
$show-home-image: true;
$home-image: url(https://images.unsplash.com/photo-1547394765-185e1e68f34e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1500&q=80);

// @mixin is like a function and is called much like a function call
@mixin easeOut {
  // transition is taking time to do something like changing colors, fading something in with opacity, or something moving
  // transition: propterty your are transitioning (only whats inside the brackets is available to be selected, can also select all with "all" keyword. time in secs for transition, and style east-out, ease-in, ease-in-out, etc..
  transition: all 0.5s ease-out;
}

@mixin background {
  @if $show-home-image {
    &#bg-img {
      background: $home-image;
      // 
      background-attachment: fixed;
      // cover the entire space
      background-size: cover;

      .overlay {
        position: absolute;
        top: 0;
        right: 0;
        width: 100%;
        height: 100%;
        background: rgba($primary-color, 0.5);
        z-index: -1;
      }
    }
  }
}

* {
  box-sizing: border-box;
}

body {
  @include background;
  background: $primary-color;
  color: #fff;
  height: 100%;
  margin: 0;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  line-height: 1.5;
}

//headings 
h1, h2, h3 {
  margin: 0;
  font-weight: 400;

  // nested selector 
  // & is for an h1, h2, or h3 with the class of lg-heading
  // without & would be a nested element in h1,h2,h3 w/ a class of lg-heading
  &.lg-heading {
    font-size: 6rem;
  }

  &.sm-heading {
    margin-bottom: 2rem;
    padding: 0.2rem 1rem;
    //lighten is a Sass function takes 2 params the original color and then how much you want to lighten passed as an int
    //to make the lightened background more opaque for the background image you can wrap the lighten in an rgba(thing, int degree);
    background: rgba(lighten($primary-color, 2), 0.5);
    width: 50%;
  }
}

// links
a {
  color: #fff;
  // remove underlines
  text-decoration: none;
}

// header
header {
  // want the header to always want to stay at the top even through scrolling
  position: fixed;
  // z-index is how close bigger the # the closer to you it is
  z-index: 2;
  width: 100%;
}

.text-secondary {
  color: $secondary-color;
}

main {
  padding: 4rem;
  height: 100%;

  //just effects any element with the class of icons in the main tag
  .icons {
    margin-top: 1rem;

    a {
      padding: 0.4rem;

      // equivelent to a:hover, this is because I believe '&' is just shorthand for parent
      &:hover {
        color: $secondary-color;
        // mixin (Sass function) call
        @include easeOut;
      }
    }
  }

  // main element with the id of home
  &#home {
    // never have scroll bars (also cuts off any text outside of container)
    overflow: hidden;
    h1 {
      // vh is 20% of the overall height of the page like slices going left to right
      // vw is like the slices going up and down
      margin-top: 20vh;
    }
  }
}

.menu-btn {
  position: absolute;
  right: 35px;
  top: 35px;
  // changes the mouse type from an arrow to pointer hand 
  cursor: pointer;
  @include easeOut;

  .btn-line {
    height: 3px;
    width: 28px;
    background: #fff;
    margin-bottom: 5px;
    @include easeOut;
  }
}